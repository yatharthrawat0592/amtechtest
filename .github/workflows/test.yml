name: Test
on:
  push:
    branches: [ "main" ]
jobs:
  notify:
    runs-on: self-hosted

    steps:
      - id: permission
        run: sudo chown -R $USER:$USER /home/ubuntu/actions-runner/_work/amtechtest
        
      - uses: actions/checkout@v3
      - name: update vm
        run: sudo apt-get update  
      
      - name: install docker
        run: sudo apt install -y docker-compose 

      - name: docker stop
        # stop and down all the containers running..
        run: sudo docker-compose down

      - name: image remove css-frontend 
        run: |
              images=$(sudo docker images css-frontend)
              if [[ "$images" == "ccs-frontend" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
              else
                   echo "Image $image is not available locally."
     
      - name: image remove css-backend
        run: |
              images=$(sudo docker images ccs-backend)
              if [[ "$images" == "ccs-backend" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
              else
                   echo "Image $image is not available locally."
      
       
      - name: image remove amtechtest_nginx
        run: |
              images=$(sudo docker images amtechtest_nginx)
              if [[ "$images" == "amtechtest_nginx" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
                     else
              echo "Image $image is not available locally."
                     
      - name: image remove ws-server
        run: |
              images=$(sudo docker images ws-server)
              if [[ "$images" == " ws-server" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
                     else
              echo "Image $image is not available locally."
                     
      - name: image remove nginx 
       
        run: |
              images=$(sudo docker images nginx)
              if [[ "$images" == "nginx" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
              else
                    echo "Image $image is not available locally."

      - name: image remove grafana 
        run: |
                images=$(sudo docker images grafana)
                if [[ "$images" == " grafana" ]]; then
                   echo "Deleting $image ..."
                     sudo docker image rm "$image"
                else
                    echo "Image $image is not available locally."
        
      - name: docker start
        # start and up all the containers
        run: sudo docker-compose up -d


